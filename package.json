{
  "name": "claude_route",
  "version": "1.0.0",
  "author": {
    "name": "sudip358",
    "email": "sudip358@example.com",
    "url": "https://github.com/sudip358"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/sudip358/claude_route"
  },
  "bin": {
    "claude_route": "./dist/main.js",
    "claude_route-setup": "./dist/setup.js"
  },
  "files": [
    "dist/main.js",
    "dist/main.cjs",
    "dist/setup.js",
    "dist/setup.cjs"
  ],
  "devDependencies": {
    "@ai-sdk/anthropic": "^2.0.1",
    "@ai-sdk/azure": "^2.0.6",
    "@ai-sdk/google": "^2.0.3",
    "@ai-sdk/openai": "^2.0.6",
    "@ai-sdk/xai": "^2.0.3",
    "@types/bun": "latest",
    "@types/json-schema": "^7.0.15",
    "@types/yargs-parser": "^21.0.3",
    "ai": "^5.0.8",
    "prettier": "^3.6.2",
    "zod": "3.25.76"
  },
  "peerDependencies": {
    "typescript": "^5"
  },
  "description": "Claude routing proxy - Run Claude Code with OpenAI, Google, xAI, and others.",
  "license": "MIT",
  "scripts": {
    "build": "bun build --target node --format cjs --outfile dist/main.cjs ./src/main.ts && bun build --target node --format cjs --outfile dist/setup.cjs ./src/setup.ts && node -e \"const fs=require('fs');const f='dist/main.cjs';fs.writeFileSync(f,fs.readFileSync(f,'utf8').replace(/import\\.meta\\.url/g,'__filename'))\" && node -e \"const fs=require('fs');const f='dist/setup.cjs';fs.writeFileSync(f,fs.readFileSync(f,'utf8').replace(/import\\.meta\\.url/g,'__filename'))\" && node -e \"const fs=require('fs');fs.writeFileSync('dist/main.js','#!/usr/bin/env node\\nrequire(\\\"./main.cjs\\\");\\n')\" && node -e \"const fs=require('fs');fs.writeFileSync('dist/setup.js','#!/usr/bin/env node\\nrequire(\\\"./setup.cjs\\\");\\n')\" && node -e \"const fs=require('fs');fs.chmodSync('dist/main.js',0o755);fs.chmodSync('dist/setup.js',0o755)\"",
    "test": "bun test",
    "typecheck": "tsc --noEmit",
    "fmt": "prettier --write .",
    "install:global": "bun run build && npm pack --silent && npm install -g claude_route-*.tgz",
    "setup": "bun run src/setup.ts",
    "config:show": "node -e \"const {configManager} = require('./dist/config-manager.cjs'); configManager.loadConfig().then(config => console.log(JSON.stringify(config, null, 2)))\"",
    "config:validate": "node -e \"const {configManager} = require('./dist/config-manager.cjs'); configManager.loadConfig().then(config => configManager.validateConfig(config)).then(result => console.log(result.valid ? 'Config is valid' : 'Config errors:', result.errors))\""
  },
  "dependencies": {
    "yargs-parser": "^22.0.0",
    "json-schema": "^0.4.0"
  },
  "prettier": {
    "printWidth": 80,
    "singleQuote": false,
    "semi": true,
    "trailingComma": "es5",
    "arrowParens": "always",
    "bracketSpacing": true,
    "endOfLine": "lf"
  }
}
